apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "kafka-consumer.fullname" . }}
data:
  consumer.py: |
    import os
    from confluent_kafka import Consumer, KafkaError

    def kafka_consumer():
        kafka_config = {
            'bootstrap.servers': os.getenv('KAFKA_SERVER'),
            'group.id': os.getenv('CONSUMER_GROUP_ID'),
            'auto.offset.reset': 'earliest',
            'security.protocol': 'SASL_PLAINTEXT',
            'sasl.mechanism': 'SCRAM-SHA-512',
            'sasl.username': os.getenv('KAFKA_USERNAME'),
            'sasl.password': os.getenv('KAFKA_PASSWORD')
        }

        consumer = Consumer(kafka_config)
        consumer.subscribe([os.getenv('TOPIC_NAME')])

        try:
            while True:
                msg = consumer.poll(timeout=1.0)
                if msg is None:
                    continue
                if msg.error():
                    if msg.error().code() == KafkaError._PARTITION_EOF:
                        continue
                    else:
                        print(msg.error())
                        break
                print('Received message: {}'.format(msg.value().decode('utf-8')))
        finally:
            consumer.close()

    if __name__ == '__main__':
        kafka_consumer()
